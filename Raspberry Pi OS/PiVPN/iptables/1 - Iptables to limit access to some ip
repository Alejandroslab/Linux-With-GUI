

you must be root to add these rules. Therefore you always have to use the 'sudo'
___________

check your current iptables (this command is for IPV4)

sudo iptables -L -nv


Chain INPUT (policy ACCEPT 89492 packets, 17M bytes)
 pkts bytes target     prot opt in     out     source               destination

Chain FORWARD (policy ACCEPT 82746 packets, 36M bytes)
 pkts bytes target     prot opt in     out     source               destination

Chain OUTPUT (policy ACCEPT 74790 packets, 36M bytes)
 pkts bytes target     prot opt in     out     source               destination



this is the default settings
you see here 3 parts called 'chains': INPUT, FORWARD and OUTPUT
they have all policy as 'ACCEPT'
this means that if a packet reaches the end of a chain it will be accepted.
'Reaches the end of the chain' means that the software will check all the rules
from the beginning to the end, following a linear order.

REMEMBER! the OUTPUT chain applies to locally generated packets
For packets that are routed via the system you have to use
FORWARD chain!


or:

sudo iptables -L --line-numbers

You can also list only the FORWARD chain rules:

sudo iptables -L FORWARD --line-numbers


e.g.

This commands allows to block any LOCAL packets outgoing to a particular ip

sudo iptables -A OUTPUT -d 192.168.1.25 -j DROP

if you need to block ALL packets that are passing in the machine in which
are you setting the iptables commands, directed to a particular IP
you have to use the FORWARD chain (like the router in a VPN settings)
Therefore the command will be the same but you will need to use the FORWARD chain


sudo iptables -A FORWARD -d 192.168.1.25 -j DROP



Remeber that in this case with the '-A' option you will append the rule.
This means that you will add it at the end of the table


____________________________
NOW REMEMEBR THAT IPTABLES READS LINE BY LINE IN ORDER!
The order is important!

e.g. If there is a packet that is allowed to pass but at the end of the table it is not,
in this case the DROP will not work.
It is therefore recommended to place this command at the top of the table using:

sudo iptables -I FORWARD 1 -d 192.168.1.25  -j DROP
sudo iptables -I FORWARD 1 -d 172.30.30.1  -j DROP

Here, instead of '-A' we have '-I' that means INSERT
this insert will simply INSERT (NOT replace) a rule in the table in the
chain that you indicate (in this case FORWARD)
and at the line number that you indicate (that in this case is the first line number that is 1)

If you want to restrict access to your router on a vpn connection this will be ideal!

It will allow the traffic to pass through the vpn server but will not allow to 'forward' (that is to connect)
data to the router IP!
________
REMEMBER after everything to save with persistance
(in this way your rules will not get erased after a reboot):

sudo netfilter-persistent save
